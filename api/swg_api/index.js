/**
 * style-api
 * This is a API document for Stylens Service
 *
 * OpenAPI spec version: 0.0.2
 * Contact: master@bluehack.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Box', 'model/BoxObject', 'model/BoxesArray', 'model/GetFeedResponse', 'model/GetImageResponse', 'model/GetImagesResponse', 'model/GetObjectsByImageIdResponse', 'model/GetObjectsResponse', 'model/GetObjectsResponseData', 'model/Image', 'model/ImagesArray', 'model/SearchImageResponse', 'model/SimImage', 'api/FeedApi', 'api/ImageApi', 'api/ObjectApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Box'), require('./model/BoxObject'), require('./model/BoxesArray'), require('./model/GetFeedResponse'), require('./model/GetImageResponse'), require('./model/GetImagesResponse'), require('./model/GetObjectsByImageIdResponse'), require('./model/GetObjectsResponse'), require('./model/GetObjectsResponseData'), require('./model/Image'), require('./model/ImagesArray'), require('./model/SearchImageResponse'), require('./model/SimImage'), require('./api/FeedApi'), require('./api/ImageApi'), require('./api/ObjectApi'));
  }
}(function(ApiClient, Box, BoxObject, BoxesArray, GetFeedResponse, GetImageResponse, GetImagesResponse, GetObjectsByImageIdResponse, GetObjectsResponse, GetObjectsResponseData, Image, ImagesArray, SearchImageResponse, SimImage, FeedApi, ImageApi, ObjectApi) {
  'use strict';

  /**
   * This_is_a_API_document_for_Stylens_Service.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var StyleApi = require('index'); // See note below*.
   * var xxxSvc = new StyleApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new StyleApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new StyleApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new StyleApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.0.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Box model constructor.
     * @property {module:model/Box}
     */
    Box: Box,
    /**
     * The BoxObject model constructor.
     * @property {module:model/BoxObject}
     */
    BoxObject: BoxObject,
    /**
     * The BoxesArray model constructor.
     * @property {module:model/BoxesArray}
     */
    BoxesArray: BoxesArray,
    /**
     * The GetFeedResponse model constructor.
     * @property {module:model/GetFeedResponse}
     */
    GetFeedResponse: GetFeedResponse,
    /**
     * The GetImageResponse model constructor.
     * @property {module:model/GetImageResponse}
     */
    GetImageResponse: GetImageResponse,
    /**
     * The GetImagesResponse model constructor.
     * @property {module:model/GetImagesResponse}
     */
    GetImagesResponse: GetImagesResponse,
    /**
     * The GetObjectsByImageIdResponse model constructor.
     * @property {module:model/GetObjectsByImageIdResponse}
     */
    GetObjectsByImageIdResponse: GetObjectsByImageIdResponse,
    /**
     * The GetObjectsResponse model constructor.
     * @property {module:model/GetObjectsResponse}
     */
    GetObjectsResponse: GetObjectsResponse,
    /**
     * The GetObjectsResponseData model constructor.
     * @property {module:model/GetObjectsResponseData}
     */
    GetObjectsResponseData: GetObjectsResponseData,
    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image: Image,
    /**
     * The ImagesArray model constructor.
     * @property {module:model/ImagesArray}
     */
    ImagesArray: ImagesArray,
    /**
     * The SearchImageResponse model constructor.
     * @property {module:model/SearchImageResponse}
     */
    SearchImageResponse: SearchImageResponse,
    /**
     * The SimImage model constructor.
     * @property {module:model/SimImage}
     */
    SimImage: SimImage,
    /**
     * The FeedApi service constructor.
     * @property {module:api/FeedApi}
     */
    FeedApi: FeedApi,
    /**
     * The ImageApi service constructor.
     * @property {module:api/ImageApi}
     */
    ImageApi: ImageApi,
    /**
     * The ObjectApi service constructor.
     * @property {module:api/ObjectApi}
     */
    ObjectApi: ObjectApi
  };

  return exports;
}));
